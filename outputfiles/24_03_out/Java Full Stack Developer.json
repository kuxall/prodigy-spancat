{"text": "Name: helen helen E-Mail: helen.helen@gmail.com Address: Washington, United States Github: https://github.com/helen LinkedIn: https://linkedin.com/helen Phone No. 743891449745 PROFESSIONAL SUMMARY:  Having 8 years of professional IT experience in designing and developing of Multi-Tier distributed, Enterprise applications using Object Oriented Programming features of Core Java, J2EE technologies with Software Development Life Cycle (SDLC). Experience in developing applications using SDLC methodologies like Waterfall, RUP, Agile (TDD, SCRUM) and Test-Driven Development. Expertise in developing web pages using HTML5, CSS3, Bootstrap, JavaScript, JQuery, Ajax and Angular JS with webpage cross browser compatibility and responsive web design and have knowledge on Server scripting language like Node JS. Developed the application using\u00a0Java 1.8\u00a0and implemented its features like Lambdas Expressions, Time API, Streams, functional interfaces, collectors, default methods, type interfaces, and foreach. Developed Service Oriented Architecture (SOA) and Micro Service Architecture based J2EE applications. Experience in developing and deploying applications on Cloud Platforms like Amazon Web Services. Managed Amazon Web Services like EC2, S3 bucket, ELB, Auto-Scaling, SNS, SQS, AMI, IAM, Dynamo DB, Elastic search, Virtual Private Cloud (VPC) through AWS Console and API Integration. Excellent in deploying the applications in AWS as EC2 instances and created snapshots for the data that had to be stored in AWS S3. Defined AWS Security Groups which acted as virtual firewalls that controlled the traffic allowed reaching one or moreEC2 instances. Experienced in developing web-based applications using Java/J2EE, Servlets, Struts (Struts, Tag Libraries and Struts custom validation rules, Tiles), Spring IOC, Spring MVC, Spring AOP, Spring Security, Spring Boot, Spring Web Flow, Spring Data, JDBC, Web Services (SOAP & Restful services) and ORM frameworks like Hibernate, iBatis. Excellent in developing REST and SOAP based Web Services using JAX-RS, JAX-WS, WSDL, JAX-B, Apache Axis, Apache CXF and Jersey frameworks. Experience in applying best practice Design Patterns and Strategies to enterprise applications to reduce tight coupling, maximize performance and reduce maintenance/extensibility risks. Expert in Core Java and implementing concepts like Multithreading, Concurrency, Exception Handling, File handling, IO, Generics and Java collections in various projects. Expertise in implementing design patterns like Singleton, Factory, Prototype, Business Delegate, Session Facade, Service locator, Visitor, Observer, Decorator, Front Controller and DAO pattern. Experienced in implementation of JMS to exchange information over reliable channel in an asynchronous way by using Active MQ, Rabbit MQ, Kafka as message queue. Experience using Hibernate for mapping Java classes with database and using Criteria API and Hibernate Query Language (HQL). Proficient in developing RESTFUL web services in Python using XML, JSON. Good Knowledge of Data Access Object (DAO) pattern to introduce an abstraction layer between the Business logic tier (Business object) and the Persistent storage tier (data source). Worked with SQL databases like Oracle, My SQL, IBM DB2 and Hands on Experience in working with NoSQL Database like MongoDB, Cassandra to manage extremely large data sets. Proficient in writing SQL queries, PL/SQL stored procedures, Triggers and creating business tables. Hands on experience in working with like Junit, Mockito, Selenium, Groovy Spock and TestNG. Experienced with deploying applications on to production servers, configuring various parameters of servers like Apache Tomcat, JBOSS, BEA Web logic, IBM Web Sphere. Skilled in using collections in Python for manipulating and looping through different user defined objects. Good Knowledge in using Dojo Components and integrating back-end applications with AJAX driven web 2.0 front-end using OO JavaScript framework.  Creation of custom components, client libraries, OSGI services, deployments frameworks, querying and connecting to DB using OSGI bundles. Portable deployment of applications as a single object using Docker. Actively involved in the DevOps streamlining process through Jenkins CI and CD Release Automation. Used version controller tools like Tortoise Subversion (SVN), CVS and Git. Experience with and solid understanding of Micro Services. Created and consumed Micro Services based on Web API. Implemented a Continuous Delivery pipeline with Docker, Jenkins and GitHub and AWS AMI\u2019s. Experience in working with IDE\u2019S like Eclipse, Spring Tool Suite (STS), RAD and Intellij. Have extensive experience working on Windows, Linux and Unix Operating Systems. Ability to work effectively in cross-functional team environments and experience of providing training to business users. TECHNICAL SKILLS PROFESSIONAL EXPERIEANCE:  Client: BCBS\t                                                                                                                                                   Aug\u201917 \u2013 Present Location: Dallas, TX\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0            \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\t                           Role: Java Full Stack Developer  Description: Well Mark Blue Cross and Blue Shield is a leading insurance company owned by its policyholder. BCBS is the health insurance and health care provider company. \u201cFind a plan\u201d is a web based J2EE application, created to help individuals and families easily shop for, and buy health insurance. Well mark offers a variety of insurance plans, as well as tools to help you choose the plan that\u2019s right for you. Responsibilities: Involved in various phases of Software Development Life Cycle (SDLC) such as requirements gathering, modeling, analysis, design, development, and testing. Developed the view-controller components using\u00a0JSPs,\u00a0HTML5,\u00a0CSS3,\u00a0AJAX,\u00a0JavaScript (jQuery). Maintained and managed JavaScript files and compiling\u00a0SAAS\u00a0files to CSS files Using WebPack build tool.\u00a0 Implemented routing logic and navigation from screen to screen and implemented login functionality on the client side in\u00a0AngularJS. Developed Angular 2.0 custom directives and used Routes and Factory validations in Angular. Created Typescript reusable components and services to consume REST API\u2019s using Component based architecture provided by Angular 2. Experience with Front-end JavaScript frameworks like AngularJS, Node JS. Hands-on experience in developing integration with Elastic search in any of the programming languages like JAVA and JavaScript. Having knowledge of advance reporting using Elastic search and Node JS. Developed the application using Angular-JS, Node-JS, Mongo-DB, Angular-UI, HTML5, Bootstrap, CSS3 and JavaScript. Implemented\u00a0core\u00a0features of\u00a0AngularJS\u00a0framework such as dependency\u00a0Injection,\u00a0Data-binding,\u00a0Filters, Directives, Templates, Services and Deep Linking Designing. Used Java 1.8 features like stream and Lambda expressions. Maintained Interface compatibility and concurrency in the project using Java 1.8 new features like Lamda expressions, default, static methods and Concurrency API.  Used Java 1.8 Method References feature to point to methods by their names and used functional Interfaces. Responsible for creating an instance on Amazon EC2 (AWS) and deployed the application on it. Micro Services were being used as a strategy to gradually replace a core monolithic application while still adding business features. Installed, secured, and configured AWS cloud servers and Amazon AWS virtual servers(Linux). Worked on AWS services to deploy static websites and dynamic Web Apps on EC2 using Elastic Beanstalk and Elastic Container Service-Docker. Used Spring MVC framework for implementing Model-View- Controller (MVC)\u00a0architecture at the Web tier level to isolate each layer of the application so that complexity of integration will be reduced and maintenance will be very easy. Used Spring AOP for solving crosscutting concerns like keeping logged data and transactions details etc. Used Spring Batch for processing large amount of data like transaction management, job processing, resource management and logging. Secured the API's by implementing Oauth2 token-based authentication/authorization scheme using spring security. Designed and developed third-party Payment services to Offer Users Convenient Payment Methods based on OAuth Protocol Used\u00a0Hibernate\u00a0ORM\u00a0framework\u00a0as persistence engine and wrote\u00a0Hibernate\u00a0Queries to automate the mapping between\u00a0Oracle\u00a0database and\u00a0Objects\u00a0in\u00a0Java. Worked with MongoDB to store non-relational data into collection and retrieve them whenever required. Developed Hibernate with Spring Integration as the data abstraction to interact with the database of MongoDB.\u00a0 Extensive experience using spring framework and using Hibernate as ORM/OGM. Extensive experience in JSON, JAXB, JAXP and hands on experience creating Web Services based on REST framework.\u00a0 Worked on setting up Maven scripts to build, package, and deploy application code to the target WebLogic Application Servers and worked on continuous integration servers like Jenkins. Developed the monolithic application and involved in migrating existing monolithic application in to Micro Service Architecture based RESTful Service and deployments were done on AWS. Designed and developed Micro Services business components using Spring Boot. Developed Restful Micro Services using Spring Rest and MVC, for OSS services. Hands on Coding to build REST Micro Services using Spring Cloud, Oracle, XSD, JSON, Spring Config, Cloud Foundry and Jenkins. Developed multiple Kafka Producers and Consumers as per the software requirement specifications. Experience in design and development of robust and highly scalable web service platforms and API's based on REST and SOAP for e-commerce applications using AXIS, WSDL, UDDI, XML, JAX-WS, JAX-RS, JAXB, JAX-RPC technologies and Jersey frameworks.\u00a0 Worked on developing Restful endpoints to cache application specific data in in-memory data clusters like REDIS and exposed them with Restful endpoints.  Developed API\u2019s to read and publish data from Elasticsearch cluster using native Java Transport client as well as REST client. Worked on Spring Integration with the Elasticsearch. Focused on\u00a0Test\u00a0Driven\u00a0Development\u00a0there by creating detailed\u00a0JUnit\u00a0tests for every single piece of functionality before writing the functionality. Performed automation testing and authored test scripts using Selenium\u00a0Web Driver, Selenium Grid\u00a0and Junit. Worked in Agile TDD environment using SDLC tools like GIT, Jira, Jenkins, Maven for build packaging and deployments of the application components. Environment:\u00a0Agile methodology, Java 1.8, J2EE,\u00a0HTML5, CSS3, JavaScript, JQuery, AJAX, AngularJS, JSP, Hibernate, Spring, XML,\u00a0JSP, JAX-RS, Spring AOP, Spring security, Oracle, AWS IAM, EC2, S3, RDS, SQS, Micro Services, MongoDB, Docker, GIT, JIRA, PL/SQL, STS, JUnit, Log4J, Maven, Jenkins, WebLogic Application Server. Client: Capital One\t\t\t\t\t\t\t\t                                 Jan\u201916 - Jul\u201917 Location: Mc Lean, VA\t  Role: Sr Java Backend Developer  Description: The move money services help general users and investment users, to carry monetary transactions among friends, family and to manage loans and pay bills.\u00a0 The project consisted of developing and maintaining\u00a0services of Capital One move money services like bill pay, home loan accounts, mortgage accounts etc. the services were developed maintained and tested for the\u00a0devices and the web. We worked on the architectures, services and the front-end UI for each of the applications. Responsibilities: Worked on High level and low-level system design, planning, estimation and implementation.  Developed presentation layer using JSP, HTML5, CSS3 and client validation using JavaScript, DOM.  Used two-way data binding features of AngularJS to implement Data binding to bind various server controls to the data from database.  Implemented animation and styling using CSS3 and jQuery.  Developed presentation layer using JSP, HTML5, XHTML, CSS and client validation using JavaScript, DOM.  Involved in writing JSP components. Used JSTL Tag library to create standard dynamic web pages.  Worked on XML and JSON for transferring and retrieving data between different applications.  Worked on generating the web services classes by using Service Oriented Architecture Micro Services, SOA, WSDL, UDDI and SOAP.  Used Web Services for creating rate summary and used WSDL and SOAP messages for getting useful plans from different module. Developed SOA (SAAS), service documents for Enterprise Applications. Implemented Core Java concepts like Multithreading, Concurrency, Exception Handling and Collections whenever necessary.  Used the Spring IOC\u00a0feature to get Hibernate session factory and resolve other bean dependencies also used\u00a0Spring\u00a0AOP\u00a0features for solving cross-cutting concerns.  Implemented the application using Spring IOC,\u00a0Spring MVC\u00a0Framework, Spring Batch, Spring Boot and handled the security using Spring Security.  Designed and integrated the full-scale Spring / Hibernate persistence solution with the application architecture. Implemented Object Relational Persistence (Hibernate) for the domain model.  Implemented various features of spring framework such as Dependency Injection, IOC, Annotations and Spring integration with Hibernate.\u00a0 Involved in design and development of the Hibernate Domain Model for the services.  Worked on web services and associated business modules integration.  Worked on development and implementation of the MVC Architectural pattern using Spring Framework including JSP, and Servlets.  Involved in identifying and implementation of different J2EE design patterns like Service Locator, Business Delegate, and DAO.  Worked in wide-area network to maintain all the device related data onto MYSQL database.  Experienced in RDBMS such as Oracle, Cassandra, MySQL, PostgreSQL and IBM DB2 databases. Used NoSQL DB database Mongo DB for proof of concept and having experience in create a Stored Procedures and having experience in Remote Procedure call (RPC) and Redis.  Developed the DAO layer for the application using Spring Hibernate template support.  Used JMS API for communication between the components.  Experience in writing complex PL/SQL queries using joins, Stored Procedures, Functions, Triggers, cursors, and indexes in Data Access Layer.  Involved in PL/SQL changes whenever needed in the application and used TOAD as Oracle client to access tables, Packages, Jobs and stored procedures.\u00a0 Create domain XML schema for use of integration, services and messaging. Troubleshoot the problems and fixes the bugs in XSLT and java related programs. Collaborated with testers and developers and prepared test plans for producing high quality software applications.  Experience in using JUnit and build tools such as MAVEN. Worked on Log4j for logging errors, messages and performance logs and SVN for version control.  Deployed and tested the application in Unix on IBM Websphere Application Server.  Environment: Java, J2EE, HTML5, CSS3, JQuery, AngularJS, AJAX, Spring, Hibernate, SOA, Micro Services, WSDL, UDDI, SOAP, JavaScript, JMS, JSON, Servlet, JSP, JDBC, Oracle, Maven, MySQL, Log4J, SVN, Websphere, JAXB, XML, Scrum, Unix/Linux, Junit. Client: Edward Jones\t\t\t\t\t\t\t                                                 Jan\u201914 - Dec\u201915 Location: St Louis, MO\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0            \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\t                                         Role: Java Developer  Description: Edward Jones is a decidedly different kind of investment firm. Our mission is to help individuals reach their serious, long-term financial goals. The web application provides functionalities such as policy management, profile management and claim reporting. The customer can access complete account information, policy information, receive instant auto insurance quote and report claims. Responsibilities: Involved in analysis, specification, design, implementation and testing phases of Software Development Life Cycle (SDLC) based on the functional requirements. Application is implemented using agile methodology where there is a daily SCRUM meeting to understand the status and resolve any issues. Upgraded existing UI with HTML, CSS, jQuery, Bootstrap and Node.js interaction. Used Node.js for building web applications with client-server architecture, where both can initiate communication in two-way connections and allow them to exchange data.\u00a0 Implemented the application using Spring IOC, Spring MVC Framework, Spring AOP, Spring Boot, Spring Batch, and handled the security using Spring Security. Designed and developed the End Points (Controllers), Business Layer, DAO Layer using Hibernate/JDBC template and Spring IOC (Dependency Injection). Spring MVC model integration for front-end request action controller. Used Apache Axis Service Engine for creating and deploying Web Service clients using SOAP. Implemented and developed REST and SOAP based Web Services to provide JSON and Xml data Consumed SOAP and Restful web services in SOA environment and used SOAP UI for testing. Developed the persistence layer using Hibernate Framework, created the POJO objects and mapped using Hibernate annotations and Transaction Management. Extensively used hibernate named queries, criteria queries, Hibernate Query Language (HQL) and Optimistic Locking and Caching to process the data from the database. Involved in creating various Data Access Objects (DAO) for addition, modification and deletion of records using various specification files. Also, worked with the PDF and EXCEL format file download of user data on JSP's when user wanted to save his/her personal data on JSP page tables.\u00a0 Developed persistence API's that can store data synchronously and asynchronously to Cassandra data store with batching.    Created flows on messaging using ActiveMQ. Extensively used JUnit for unit testing, integration testing and production testing. Involved in installing and configuring Maven for application builds and deployment. Used JIRA to assign, track, report and audit the issues in the application. Worked with Intellij and used Gradle build tool to achieve more functionality for build process. Involved in Maintenance and Enhancements for the project. Environment: Java, HTML, CSS, Bootstrap, jQuery, Node.js, Spring IOC, Spring MVC, Spring Batch, Spring Security, XML, XSD, SOAP, Restful, ActiveMQ, Cassandra, Log4j, SOA, Oracle, Apache Tomcat, Agile Methodology, JUnit, Maven, GIT, JIRA and IntelliJ. Client: AIG Insurance \t\t\t\t\t\t                                                                 Apr\u201912 - Jul\u201913 Location: Chicago, IL\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0            \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\t                                         Role: Java/J2EE Programmer  Description: American International Group, Inc. (AIG) is a leading insurance and financial services organization in the US. The Auto Insurance Application project involves the design and development of a Web based internet application to provide online insurance services. The web application provides functionalities such as policy management, profile management and claim reporting. The customer can access complete account information, policy information, receive instant auto insurance quote and report a claim. Responsibilities:  Involved in all phases of the Software development life cycle (SDLC) using Agile Methodology. Developed User Interface using JSP, JSTL, HTML, CSS, Java Script, jQuery and Angular JS. Used various jQuery UI controls and corresponding Event handlers. Used Spring MVC and Dependency Injection for handling presentation and business logic. To maintain loose coupling between layers published the business layer as services and injected necessary dependent components using Spring IOC and published cross cutting concerns like Logging, User Interface exceptions, Transactions using Spring AOP. Integrated Spring DAO for data access using Hibernate. Used Spring Security for Authentication and Authorization of the application. Extensively used JSON to parse the data from server side to satisfy the business requirement. Implemented persistence framework using Hibernate & Handled Transaction Management using the provided data source. Responsible for designing Hibernate mapping files based on business logic and Object relationships. Integrated Spring and Hibernate together and worked on developing backend components and services using Hibernate and spring. Established Database Connectivity using JDBC, Hibernate O/R mapping with Spring ORM for DB2.  Worked on Hibernate in Data Access Layer for mapping the\u00a0java\u00a0objects to relational database and SQL queries to fetch the data, insert and update the data from the database.\u00a0 Consumed Web Services to interact with other external interfaces to exchange the data in different forms by using Restful service. Implemented SOA architecture with Web Services using SOAP, WSDL and XML using Apache CXF framework and worked on parsing the XML files using DOM/SAX parsers. Created tables, triggers, PL/SQL Stored Procedures, SQL queries, Joins, and views for IBM DB2. Implemented Restful and SOAP based Web Services and used Soap UI for testing. Used Spring JMS module for lookup for the queues and MDBs for the listeners. Involved in Unit Testing of various modules by generating the Test Cases. Performed deployment of applications on JBOSS. Written LINUX shell scripts to identify user login information. Involved in day to day handling of JIRA issues (production issues at time) that involved data inconsistencies that required to be solved in very less time. Involved in Bug fixing of various modules that were raised by the testing teams in the application during the Integration testing phase. Participated in Code Reviews of other modules, documents, test cases. Environment: Java, J2EE, HTML, CSS, JavaScript, jQuery, Angular JS, JSP, JSTL, JSF, Spring, Hibernate, XML, XSD, SOAP UI, Web Services, Restful, SOAP, WSDL, Log4j, JUnit, DB2, JBOSS, Jenkins, SVN, Eclipse IDE, JIRA, Agile Methodology, Linux, Rational Rose and UML. Client: TekStrom INC\t\t\t\t\t\t\t\t                                  Feb\u201911 - Apr\u201912 Location: Bangalore, India\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0            \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\t                                         Role: Software developer  Description: The objective of this project is to implement a web based front end system which can be used by the employees, managers and higher-level management having specific role permissions for effective processing of day to day business activities in the company like leave management, project management and resource management etc. Responsibilities: Captured all the functional and technical requirements of the Supply Chain Management System. Was involved in the preparation of the software requirements and design document (SRS & SDS). Adapted Java Design Patterns DAO, Value Objects and Session Facade to develop business components.  Developed class diagrams and Sequence diagrams using UML. Defined the detailed application and database design. Involved in collecting requirements from Business Users, Data Modeling, Designing and Developing Tools using J2EE, Java, JSP, EJB, and Servlets.  Developed the application based on MVC architecture. Developed the GUI using HTML, CSS and JSP, AJAX and JQuery.  Developed user interface using JavaScript, HTML, CSS, JQuery to speed the application. Front end validations are written using JavaScript. Java Servlets were used as the common gateway interface between the client and server.  Java Beans were used to handle business logic as a Model and Servlets to control the flow of application as Controller. Writing database queries on Oracle and Involved in the JDBC queries as part of implementation. Used WebSphere Application server to deploy the applications. Performed Unit Testing using JUnit. Provided a User Manual and User Training on the new system to ease them into the new system. Used CVS as a version control tool. Environment: JDK, J2EE, Java, HTML, CSS, JSP, JavaScript, AJAX, JQuery, EJB, Servlets, MVC Architecture, JDBC, Oracle, WebSphere, JUnit, CVS, Eclipse, Linux, Design Patterns, UML. Client: Visual soft\t\t\t\t\t\t\t                                               June\u201909 - Feb\u201911 Location: Hyderabad, India\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0            \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\t                                         Role: Java Developer  Description: This is an e-commerce application, which helps the customers to sell their products online. A particular customer can access his information with proper authentication/authorization only (Encrypted id/passwords). It enables the customer to update the product information online, search for a product by full/partial product name, product category and ID. It also provides the customer with up-to-date reports on the sales information based on customer age-group/gender and product Name/category. Responsibilities: Involved in understanding and analyzing the requirements of the project. Followed Waterfall Methodology to implement the features. Used Java Jdk1.5 features to implement the functionalities. Designed and developed the User Interface using HTML, JavaScript, AJAX and CSS. Implemented Struts MVC design pattern and front controller pattern. Developed Action Class components for performing business process execution and involved in configuration of struts configuration specific xml file. Created and handled Custom-Exceptions that are related to business operations. Created child Threads to improve the performance by running some independent tasks at background. Developed Server-Side components for the business services for creating Items, BOM, Sourcing Rules, and substitute. Used Log4j for logging purposes during the development of the application. Used JDBC to interact with the underlying MySQL Database. Extensively worked on SQL for writing complex queries in the business logic layer.  Deployed Applications on Apache Tomcat Server and used CVS as the version control manager. Used Mantis for tracking the issues and for enhancements of any features. Used Eclipse IDE to integrate the different frameworks to build the overall application. Environment:  Java, JDBC, Jdk1.5, Servlets, Struts, JSP, Hibernate, Java Mail API, AJAX, HTML, XML, ANT, Log4J, CVS, RAD, Putty, MySQL, Mantis, Apache Tomcat, Eclipse IDE, Waterfall Methodology."}