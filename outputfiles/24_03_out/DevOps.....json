{"text": "Name: clara clara E-Mail: clara.clara@gmail.com Address: Bogot\u00e1, Colombia Github: https://github.com/clara LinkedIn: https://linkedin.com/clara Phone No. 228972091486 Professional Summary: An outstanding, self-motivated professional with over 8+ years of experience in IT industry with major focus on DevOps,AWS,EC2, RDS, security groups, auto-scaling, load balancers (ELBs), Azure, Software Configuration and Build/Release Management, Maven, Chef, Puppet, Jenkins, Ansible, Terraform, Terragrunt, Docker, Packer, Kubernetes, Helm, Splunk, Ant,GIT, CVS, SVNetc. Experienced in setting up the enterprise infrastructure on Amazon Web Services (AWS). Experienced in planning, deploying, and supporting\u00a0AWS\u00a0infrastructure. Worked on\u00a0AWS\u00a0EC2, Security Groups, Elastic IP's, Load balancers, Auto-scaling groups, S3, elastic beanstalk, Direct Connect, VPC, Cloud watch, IAM and several other services. Experience working with IAM to create new roles, users and groupsacross different accounts with custom build policies. Experienced in Developing and managing cloud VM's with\u00a0AWS\u00a0EC2 command line clients and management console Experience in Monitoring resources such as EC2, EBS volumes and Amazon RDS services using CloudWatch. Experienced in managing\u00a0AWS\u00a0Route53 to route traffic between different regions set alarms and notifications for EC2 instances using Cloud Watch. \u00a0Experience in creating various CloudWatch alarms to send an Amazon Simple Notification Service (SNS). Experience in configuring\u00a0AWS\u00a0S3 with lifecycle policies to backup files and archive files in Amazon Glacier. \u00a0Experience in Developing\u00a0AWS\u00a0CloudFormation templates to create custom sized VPC, subnets, EC2 instances, ELB and security groups. \u00a0Experienced in automated deployment (terraform, AWS CloudFormation), and serverless architecture AWSlambda and other AWS services. Experience with HashiCorptools (Terraform, Packer, Vault). Used\u00a0Terraform\u00a0to provision the instances on AWS Cloud. Provisioned largescale environments as infrastructure as a code using\u00a0Terraform. \u200eBuilt customTerraform\u00a0Modulesforprojects to manage code as DRY. Provisioned the highly available EC2 Instances using\u00a0Terraform\u00a0and Ansible Playbooks. Experience in Setting up the build and deployment automation for\u00a0Terraform\u00a0scripts using Jenkins. Implemented Production environment using Terraform with\u00a0Terragrunt\u00a0as a wrapper.\u00a0 Used Packer\u00a0to create Automated Machine Images and automated the whole AMI creation process using Jenkins. Created Amazon Machine Images (AMI's) of EC2 instances using\u00a0Packer. Created customKafka, zookeeperAMI's using\u00a0Packer. Configured Kafka and Zookeeper and deployed it across Kubernetes cluster. Experienced on Container Orchestration with Docker and\u00a0Kubernetes. \u00a0Involved\u00a0Kubernetes\u00a0Cluster Deployments using\u00a0Kops\u00a0and\u00a0Helm. Building Docker image with\u00a0Packer\u00a0and provisioning with Kubernetes. Built a MYSQL server in a container and configured it to interact with Grafana as its back-end database and deployed it in a kubernetes cluster. Used Kops to build Kubernetes cluster and wrote Helm to deploy it. Deployed Services and applications in to Kubernetes Cluster using Helm. ConfiguredELK(Elasticsearch, Logstash, Kibana), Filebeats, Kafka, Zookeeper, and wrote Helm Charts to deploy them in to Kubernetes clusters.\u00a0 Expert on infrastructure with\u00a0Docker\u00a0containerization. Configured\u00a0Docker\u00a0containers and created\u00a0Docker\u00a0files for different environments. Dockerized applications by creating Docker images from Dockerfile. Implemented build stage to build the microservice and push the\u00a0Docker\u00a0container image to the private\u00a0docker\u00a0registry. Integrated Technologies such as Docker and Kubernetes for a powerful cluster manager and orchestration system for running Docker Containers. Built Jenkins jobs to create AWS infrastructure from GitHub repos containing terraform code. Designed project workflow/pipelines using Jenkins and also managed different plugins inside Jenkins like Maven, AWS CLI, Docker and Kubernetes.  \u00a0Integrated\u00a0SonarQube\u00a0with Jenkins using periodic builds to test code quality and used Kubernetesplugin to deploy this application in to a Kubernetes Cluster. Integrated Maven with Jenkins for the builds as the Continuous Integration process, also Used Jenkins to perform automated Builds and Deployments. Implemented a Continuous Delivery framework using Jenkins, Chef in Linux environment. Developed build and deployment scripts using MAVEN as build tools in Jenkins to move from one environment to other environments. Extensively worked on Hudson and Jenkins for continuous integration and for End to End automation for all build and deployments. Expert in creatingJenkins\u00a0configurations to generate project artifacts as part of packaging and deployment activities.\u00a0 Expertise in Application Deployments & Environment configuration using Chef, Puppet, Ansible. Implemented\u00a0Ansible\u00a0to manage all existing servers and automate the build/configuration of new servers. Configured\u00a0Ansible\u00a0to manage AWS environments and automate the build process for core AMIs used by all application. Responsible for automated deployment of Java application in Tomcat Server. Experience in building new application and deployment through\u00a0Ansible\u00a0and managing them in production environment. Managing existing infrastructure and created new infrastructure using\u00a0Ansible\u00a0as Configuration Management Tool. Responsible for automating identification of application server and database server using\u00a0Ansible Scripts. Automated various infrastructure activities like Continuous Deployment, Application Server setup, stack monitoring using\u00a0Ansible\u00a0playbooks and has Integrated\u00a0Ansible\u00a0with Jenkins. Experienced with\u00a0Ansible\u00a0playbooks and created various roles for applications, then deployed the Applications/Services on hosts. Used\u00a0Ansible\u00a0to manage systems configuration to facilitate interoperability between existing infrastructure and new infrastructure in alternate physical data centers or cloud (AWS). Used\u00a0Ansible\u00a0to Setup/teardown of ELKstack(Elasticsearch, Logstash, Kibana) and troubleshoot the build issues with ELK and work towards the solution. Development of automation of Kubernetes clusters with\u00a0Ansible, writing playbooks. Wrote and tested\u00a0Chef\u00a0cookbooks using Test Kitchen. Worked on Setting up and maintaining automated environment using\u00a0Chef\u00a0recipes&cookbooks within AWS environment. \u00a0Developed cookbooks using\u00a0chef\u00a0for Deploying services on Hybrid environments, both Windows and Linux.\u00a0 Configured and monitored distributed and multi-platform servers using\u00a0chef. Defined\u00a0Chef\u00a0Server and workstation to manage and configure nodes. Using Chef deployed and configured Elasticsearch, Logstash and Kibana (ELK) for log analytics, full text search, application monitoring in integration with AWSLambda and CloudWatch. Written wrapper scripts to automate deployment of cookbooks on nodes and running the chef client on them in a Chef-Solo environment. Experience in configuring and managing Chefmasterserver and involved in developing recipes and cookbooks.\u00a0Ability in development and execution ofPython, RUBY and SHELL scripts. Experience configuring and managing Puppet master server and experience in updating and creating modules and pushing them to puppet clients. Experienced with Nagios, CloudWatch as IT Infrastructure Monitoring tool and knowledge on Splunk.\u00a0 Experienced with Databases Like Oracle, SQL Server, MySQL, NoSQL (DynamoDB, Couchbase), Amazon Aurora. Experienced in Branching, Merging, Tagging and maintaining the version across the environments using SCM tools like GIT and Subversion (SVN) on Linux platforms.\u00a0 Used both GIT and Bitbucket source control systems to manage code. Expertise on Source code control tools like SVN, Bitbucket (Git) and good knowledge on Branching and merging code lines in the GIT. Ability to write Shell, Python, YAML andPerl scripting and worked on Splunk for generating various metrics Having work experience in support of multi-platforms like UNIX, IOS, Linux and Windows of production, test and development server. Excellent experience in documenting and automating the build and release process.\u00a0 Involved in Linux Administration activities like troubleshooting of regular issues, configuration issues, applying patches, package management and file system issues. Good Interpersonal Skills, team-working attitude, takes initiatives and very proactive in solving problems and providing best solutions. Technical Skills: Certifications:  AWS Certified Developer Associate. Validate at http://aws.amazon.com/verification Validation #: XYFE1D92KN1Q10SS Experience: Sr AWS/CloudOps Engineer Huntington Bank, Columbus, OH\t\t\tDec 2017 to Present Job Responsibilities: Involved in designing and deploying multiple applications using AWS cloud infrastructure focusing on high availability, fault tolerance and auto-scaling of the instances.\u00a0 Experience in AWS Services such as EC2, S3, EBS, VPC, ELB, Route53, Cloud Watch, Security Groups, Cloud Trail, IAM, CloudFront, EMR, RDS and Glacier. Experience on Amazon Web Services for deploying EC2 instances consisting of various flavors like Amazon Linux AMI, Red Hat Linux Enterprise, SUSE Linux, Ubuntu Server, and many more.\u00a0 Creating public and private subnets within the VPC and attaching them to the EC2 instances based on the requirement. Configured ElasticLoadBalancers with EC2, Autoscaling groups.\u00a0 DesignedTerraform templates to create custom sized VPC, subnets, NAT to ensure successful deployment of Web applications and databasetemplateson AWS. Used security groups,network ACLs, Internet Gatewaysand Route tables to ensure a secure zone for organizations in AWS public cloud. Well Versed with Configuring Access for inbound and outbound traffic RDSDB services, DynamoDB tables, EBS volumes to set alarms for notifications or automated actions. Setting up IAM user roles with corresponding user and group policies using JSON. Created SNS (Simple Notification Services) and triggering it by Cloud Watch monitoring to send SMS or Email to desired recipients. Used Terraform to transform the infrastructure from on - premise to cloud. Worked on creating the modules driven AWS Infrastructure with Terraform. Created Infrastructure Git repositories for Terraformto launch the stacks.\u00a0 Expert in writing Templates for AWS infrastructure, as a code using Terraform to build Development, Testing, staging and production environments. Collaborate in the automation of AWS infrastructure via Terraform and Jenkins - software and services configuration via Ansibleplaybooks. Worked extensively with Terraform and wrapped it\u00a0Terragrunt\u00a0and managed the back-end state in S3 Bucket. Wrote Ansibleplaybooks to manage Web applications. We coordinated with TerraformDSL for automating inside the AWS cloud.  \u00a0Widely used\u00a0Terragrunt\u00a0for deploying the changes to the specific instance and provisioning. Wrote an Ansible role that combined with Terraform and\u00a0Terragrunt\u00a0will deploy an Elastic Beanstalk application and environment. Expertise in setting up Kubernetes on AWS for production using KubernetesOperations (Kops), a cluster management tool to spin up a highly available production cluster. Deployed production-ready KubernetesClusters on top of AmazonEC2 instances using\u00a0KOPS.\u00a0 \u00a0Developed Production environment of different applications on AWS by provisioning Kubernetesclusters on EC2 instances using KubernetesOperations (KOPS). Good experience in writing Helm Charts, KubernetesYAML files for deployment of microservices into Kubernetes clusters. Leveraging\u00a0kops\u00a0implemented a KubernetesContainerOrchestration solution within AWS allowing for easy management, creation and recovery of AWS assets. Managed Kubernetes charts using Helm. Created reproducible builds of the Kubernetes applications, managed Kubernetes manifest files and Managed releases of\u00a0Helm packages. Worked with containerization tools, can implement transition to Docker and develop distributed cloud system using Kubernetes and Helm package manager for Kubernetes.\u00a0 Worked on Docker hub, creating Dockerimages and handling multiple images primarily for middleware installations and domain configurations. Used\u00a0Packer\u00a0to create golden images with the custom configuration.Knowledge on creating Kafka, zookeeper and baking AMI's by using Packer. Integrated Docker container-based test infrastructure to JenkinsCI test flow and set up build environment integrating with Git to trigger builds using Web Hooks and Slave Machines. Used Kubernetes to deploy Scale, Load Balance, Scale and manage DOCKER containers with multiple namespace versions. Implemented Continuous Integration using Jenkins. Generated scripts in Maven, Perl&Bash Shell for build activities in QA, Staging and Production environments. Developed build and deployment scripts using MAVEN as build tool in Jenkins to move from one environment to other environments. \u00a0Installing/upgrading Jenkins infrastructure on multiple servers. Used Ansible for configuration management of hosted Instances within AWS. Configuring and Networking of Virtual Private Cloud (VPC).\u00a0 Automated various infrastructure activities like ContinuousDeployment, applicationserver setup, stack monitoring using Ansibleplaybooks. Developed Ansible scripts for an automated server provisioning and Docker images for reducing the time between provisioning and deployment. Configure and ensure connection to RDS database running on MySQL engines.\u00a0 Responsible for Plugin Management, User Management, regular incremental backups and regular maintenance for recovery. Conducted performance testing of Apache, Tomcat, Nginx management services.\u00a0 Versioning and Source control of codes using GIT concepts such as branching, merging, labelling/tagging, branches locking, access control and integration.\u00a0 Environment & Tools:\u00a0AWS\u00a0(EC2, VPC, ELB, S3, RDS, IAM, Cloud Trail and Route 53), GIT, Bitbucket, VPC, Route53, EBS, SQL, ELB, Cloud watch, CloudFormation, Terraform, Kubernetes, Helm Charts, Packer,Ansible, Docker, Maven,\u00a0AWS\u00a0CLI,\u00a0AWS\u00a0Auto Scaling, Unix/Linux, Shell scripting, Nagios. Sr AWS/DevOps Engineer Conduent Inc, Sandy, Uta \t\t\t\t\t\t\tAug 2016 to Nov 2017 Job Responsibilities:\t Developed automated solutions for customer applications to be deployed to public cloud environments using immutable infrastructure deployments with\u00a0Terraform\u00a0and Ansible. Development and Automation for Deploying Containers, Applications, and Provisioning Public Cloud Environments with\u00a0Terraform, Ansible, Docker and Kubernetes. Wrote\u00a0Terraform\u00a0/ Ansible code for automating secure VPC creation as well as the deployment process of standing up secure Jenkins Server, ELK stack, Security Monkey, Snort IDS, etc. Managed Dockerorchestration and Docker containerization using\u00a0Kubernetes.\u00a0 Expertise in setting up Kubernetes on AWS for production using KubernetesOperations (Kops). Launched Docker containers on pods on top of multi-node Kubernetes cluster in AWS environment with help of\u00a0Kops\u00a0and kubectl. Deployed Kubernetes clusters on top of Servers using\u00a0KOPS\u00a0and managed local deployments in Kubernetes. Used\u00a0Kubernetes\u00a0to orchestrate the deployment, scaling and management of Docker Containers. Worked with containerization tools, can implement transition to Docker and develop distributed cloud system using Kubernetes and\u00a0Helm\u00a0package manager for Kubernetes. \u00a0Skilled in maintaining Dockercontainerclusters managed by Kubernetes and deployed Kubernetes applications using\u00a0helm\u00a0charts. Provided consistent environment using Kubernetes for deployment scaling and load balancing to the application from dev through production, easing the code development and deployment pipeline by implementing Dockercontainerization with multiple namespace. Used Kubernetes to deploy scale, load balance, scale and manage Docker containers with multiple names spaced versions using\u00a0helm\u00a0charts. Experience in working with\u00a0AWS\u00a0Cloudadministration which includes services like EC2, VPC, ELB, S3, EBS, Elastic Beanstalk, AMI, SNS, RDS, DynamoDB, IAM, Route 53, Auto scaling, Lambda, Cloud Front, Cloud Watch, Cloud Trail, Cloud Formation and Security Groups.\u00a0 \u00a0Designed\u00a0AWS\u00a0Cloud Formation templates to create custom sized VPC, Subnets, NAT to ensure successful deployment of Web applications and database templates. Worked on Docker hub, creating Dockerimages and handling multiple images. Worked on designing and implementing continuous integration system using Jenkins by creating Python and Shellscripts. Configured and maintained Jenkins to implement the CI process and integrated the tool with GIT and Maven to schedule the builds. Worked with Configuration Management automation tool Ansible and has worked on integrating AnsibleYAML Scripts. Created Ansible playbooks to automatically install packages from a repository, to change the configuration of remotely configured machines and to deploy new builds. Worked with Ansible to manage Web Applications, Config Files, Data Base, Commands, Users Mount Points, and Packages also to assist in building automation policies. Managed a PaaS for deployments using Docker, Ansible  which reduced considerably deployment risks. Created Ansible supported YML scripts to restart JBoss, Tomcat, and Jetty servers through GUI. Created Ansibleplaybooks for various automation purpose, file copy, permission changes, configuration changes, path specific folder creation. Maintained and Administered GIT Source Code Tool.\u00a0Defined dependencies and plugins in MavenPOM.xml for various activities and integrated Maven with GIT to manage and deploy project related tags.\u00a0 Worked with logging/monitoring tools such as Splunk, Logstash, CloudWatch and Nagios. Managed Build results in Jenkins and Deployed using workflows.\u00a0 Used elastic search through JSON and JavaAPI.\u00a0 Created some new plugins by writing the scripts in python language.\u00a0  Involved in writing SQL queries to implement the schema related changes for internationalization and debugged the build errors using SQL queries to make sure Database is not corrupted. Designed and implemented scalable, secure cloud architecture based on AmazonWebServices. Strong use of scripting languages like Shell, Bash, Python, Ruby, PERL and PHP. Environment:AWS\u00a0(EC2, VPC, ELB, S3, RDS, IAM, Cloud Trail and Route 53), GIT, Bitbucket, VPC, Route53, EBS, SQL, ELB, Cloud watch, Cloud Formation, Terraform, Kubernetes, Helm Charts, Packer, Ansible, Docker, Maven,\u00a0AWS\u00a0CLI,\u00a0AWS\u00a0Auto Scaling, Unix/Linux, Shell scripting,Agile, Jenkins, Nexus, Puppet, Nagios WebLogic, TOMCAT, Python Scripts, Perl Scripts, Ruby Scripts, XML, Oracle, Unix. Sr AWS/DevOps Engineer Sullivan Cotter LLC, Minneapolis, MnApril 2015 to July 2016 Job Responsibilities: Experience in designing and deploying AWS Solutions using EC2, S3, EBS, Elastic Load Balancer (ELB), Auto Scaling groups, AMIs. Design roles and groups using Identity Access Management (IAM). Implemented messaging solution to automate device data sync with client database utilizing Openshift applications deployed on AWS. Using Chef deployed and configured Elasticsearch, Logstash and Kibana (ELK) for log analytics, application monitoring in integration with AWS Lambda and CloudWatch. Created and maintained automation of environment using\u00a0Chef\u00a0recipes& cookbooks within AWS environment. Wrote and tested\u00a0Chef\u00a0cookbooks using git and Test Kitchen. Written wrapper scripts to automate deployment of cookbooks on nodes and running the chef client on them in a Chef-Solo environment. Converting production support scripts to Chef Recipes. Implemented\u00a0Chef\u00a0to deploy the builds for Dev, QA and production. Worked on documentation - Chef Basics, Initial setup of Chef, Data bags implementation, Coding Standards, Cookbook document and Testing docs. Managed the configurations of the instances using Chef. Written and modified various Cookbooks / Recipes for better management of the systems. Created ChefCookbooks for sudo users and network configurations using ChefServer Wrote ChefCookbooks, recipes and pushed them onto Chef Server for configuring EC2 Instances. Built and managed a large deployment of UbuntuLinux instances systems with ChefAutomation and written recipes, tools, shell scripts and monitoring checks. Used Chef to manage Web Applications, Config Files, Database Commands and Packages. Work station setup for Knife plug-in and establish connectivity between Chef Server and workstation. Designed and implemented Chef, including the internal best practices, cookbooks, automated cookbook CI and CD system. Made use of Jenkins for ChefCI, Thor for versioning, Berkshelf for dependency management and Test-Kitchen for testing and development. Developed automation scripting in Python (core) using Chef to deploy and manage Java applications across Linux servers.  Worked on Versioncontrol setups like GIT and integration tools Jenkins Installed, Configured and AdministeredHudson/Jenkins Continuous Integration Tool.  Collaborated in the automation of AWS infrastructure via Terraform and Jenkins - software and services configuration via chefcookbooks. Responsible for Continuous Integration (CI) and Continuous Delivery (CD) process implementation using Jenkins along with PowerShell to automate routine jobs. Experience in Container management using\u00a0Docker\u00a0by writing\u00a0Docker\u00a0files and set up the automated build on\u00a0Docker\u00a0hub. \u00a0Worked on Microservices for Continuous Delivery environment using\u00a0Docker\u00a0and Jenkins.\u00a0 Created and managed a\u00a0Docker\u00a0deployment pipeline for custom application images in the cloud using Jenkins. Developed shellscripts for automation of the build and release process, developed CustomScripts to monitor repositories, Server storage.  Worked on the installation and configuration of the monitoring tool Nagios.  Implemented Nagios core/XI for monitoring Infrastructure resources.  Set up customized monitoring with Nagios, &PNP4Nagios Graphs for the legacy and new environments.  Automated Nagios services for database server, web-server, application-server, networks, file sizes, RAM utilization, Disk performances using Python script in Chef. To achieve Continuous Delivery goal on high scalable environment, used Docker coupled with load-balancing tool Nginx.  Bootstrapping automation scripting for virtual servers, using VMWare clusters.  Worked on Apache and Firewalls in both development and production. Environment: Chef, Docker, AWS, Maven, Sonarqube, Nagios, Python, Shell, VMware, Java, Ant, Maven, Jenkins, Hudson, GIT, SVN, Apache Webserver, JBoss, Apache JMETER, GIT, SVN, Windows, Ruby, Chef, JIRA. AWS/DevOps Engineer Uptake, Chicago, IL\t\t\t\t\t\t\t\tDec 2013 to March 2015 Job Responsibilities: As a Build and Release Engineer accelerated the project timelines by enabling seamless collaboration, integration and communication in the software development community.\u00a0Designed and implemented Continues Integration process and tools with approval from development and other affected teams.  Managed Windows virtual servers and Ubuntu Linux (Rackspace and AWS EC2) with Puppet using Git.  Defined processes to build and deliver software baselines for internal as well as external customer's engine to build and promote applications to DEV, QMG, UAT, PROD, and DR to UNIX environments.  Managed the development activities for the multiple server instances by enabling password less SSH communication between the servers.\u00a0 Worked closely with the development team in the design phase and developed use case diagrams. \u00a0Integrated Maven with shell scripts created in bash to automate the deployments for the Java based applications.  Performed Design, involved in code reviews and wrote unit tests in Python.  Extensive experience of working with the release and deployment of large-scale .Net Java/J2EE Web applications.  Key role in understanding the business functionality, business requirements and technical specifications of the applications / clients ensuring strict adherence to the same.  Development, Quality Assurance and Management teams to ensure cross communication and confirmed approval of all production changes  Experienced in setting up Continuous Integration environment using Jenkins. Building and monitoring software projects continuously with CI tools like Jenkins and Hudson. Used the continuous integration tool Jenkins to automate the daily processes. Worked on Oracle Databases there by connecting different environments to these databases in lower and production environments.\u00a0Automated the cloud deployments using Puppet, Python and AWS CloudFormation Templates.\u00a0 Created and updated Puppetmanifests and modules, files, and packages stored in the GIT repository.\u00a0 Lead Automation deployment team and worked with Puppet, written puppet modules for application deployment. Designed and implemented fully automated server build management, monitoring and deployment by using DevOps\u00a0technologies like Puppet. Used Puppet Server and Workstation to manage and configure nodes. Build and Deployed Java/J2EE to a web application server in an Agile continuous integration environment and also automated the whole process.  Created and maintained the Shell deployment scripts for web application servers.  Involved in editing the existing ANT/MAVEN files in case of errors or changes in the project requirements.  Coordinating the resources by working closely with Project Manager's for the release and Project Manager for all the Operational Projects.  Source code configuration tools Subversion and GIT used for different projects.  Imported and managed multiple corporate applications into Subversion (SVN).  Developed and implemented the software release management for the release of web applications.  Performed Load/Functional testing using Mercury Load runner and HP QTP. Designed a customized Status Reporting tool used currently, based on the specific requirements using J2EE/Struts and WebLogic Server with DB2 as Database.  Coordinated all the IT projects successfully by resolving release interdependencies  Worked on Confluence to share knowledge with other teams  Performed integrating, JUnit and code quality Tests as a part of build process.  Implemented Automated Application Deployment using chef.  Responsible for the development and maintenance of processes and associated scripts/tools for automated build, testing and deployment of the products to various developments. Environment: Subversion (SVN), Puppet,Jenkins, Confluence, Java/J2EE, ANT, MAVEN, Web Logic, Python Scripting, Shell Scripts, Junit, XML, UNIX, WindowsXP, Oracle. DevOps Engineer Zentech, Hyderabad, India\t\t\t\t\t\t              September 2012 to November 2013 Job Responsibilities: Performed version control administration using CVS. Worked closely with software developers and DevOps to debug software and system problems. Maintained and coordinated environment configuration, controls, code integrity, and code conflict resolution. Implemented Maven builds to automate JAR, WAR, and EAR. Wrote ANT and MAVEN Scripts to automate the build process and Shell/Perl scripts to automate the deployment process. Used Jenkins for Continuous Integration and deployment in JBoss  Application Server. Worked with the Architects on SDLC process being the owner of post development environments Performed Load/Functional testing using Mercury Load runner and HP QTP. Coordinated Instance Refreshes and Environment Re-base lining. Coordinated all the IT projects successfully by resolving release interdependencies and planning release. Planning, scheduling and documenting releases at code Freeze Periods. Worked with many teams of strength more than 30 and managed 2 release/build engineers. Stand by administrator for Clear Case and PVCS. Performed Functional and Stress Testing for a few applications using Mercury Load runner. Installed and administered Artifactory repository to deploy the artifacts generated by Maven and to store the dependent jars which are used during the build. Performed all necessary day-to-day Subversion functions for the project like merging, creating branches and tags using Tortoise SVN/ Visual SVN. Tracked backlogs and fixed bugs using JIRA. Integrated JIRA with subversion and configured with Jenkins to automate the entire Build and release process. Developed, maintained, and distributed release notes for each scheduled release. Kept track of all the releases and request of the developers through Infrastructure management tool. Supported engineering plans and schedules by providing CM/Release Engineering services to build, deploy, develop scripts, oversee branch and merge strategies, and build automated tools as necessary. Created tickets for bug stories and feature stories in JIRA with co-ordination of QA/BA team respectively and issued it to developers to fix bugs and include necessary feature add. Mentor Business Areas on Subversion Branching, Merging strategies concepts using Git SVN.\u00a0 Environment: Subversion, AWS, Clear Case, Jenkins, Java/J2EE, ANT, MAVEN, DB2, UNIX, Windows Server 2003 Windows XP, Web Sphere, Perl Scripting, CVS. Linux Administrator Reliance Retail, Hyderabad, India\t\t\t\t\t\t\tFeb 2011 to Sep 2012 Job Responsibilities: Managed and administrated of all UNIX servers, includes Linux operating systems by applying.\u00a0 Relative patches and packages at regular maintenance periods using RedHat Installation, Configuration, up gradation and Administration of RHEL 3.x/4.x Using Jumpstart & Kickstart OS integration.\u00a0 Performed package installations, maintenance, periodic updates and patch management on Linux using rpm/yum and system administration tasks such as User/group account management, LVM, file systems, disk management, load balance monitoring on servers and server health checks. Responsible for configuring and managing DNS, DHCP, NFS, FTP, SSH, LDAP, NIS and Squid servers in Linux.\u00a0 Responsible for configuring real-time backup of web servers. Manage security of servers. Respond to work requests which include problem trouble-shooting, root cause analysis, executing scheduled changes, performance analysis.\u00a0 Wrote Python scripts for task automation and tracked disk space on servers through shell scripts.\u00a0\u00a0 Managing services, maintaining and managing log files, monitoring event, logs and troubleshooting system problems using Nagios tool and resolve any reported issues.\u00a0 Responsible for reviewing open tickets, resolve and close any existing tickets using BMCRemedytool.\u00a0 Responsible for resolving network issues using network tools like ping, TCP trace route, trace route and TCP dump. Manage security of servers.      Environment: RHEL, Linux VMware, UNIX, python, Nagios, Red Hat. Education Bachelors in Electronics and Communication Engineering from JNTU, India."}